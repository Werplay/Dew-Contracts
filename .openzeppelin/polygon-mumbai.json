{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xabD3dD6C6961c4b1345136B1024FcDAb01D8437d",
      "txHash": "0x197c5a07df65d919c92aa61d66f843bdd37f21b16cc4007e870c5c1977c50577",
      "kind": "uups"
    }
  ],
  "impls": {
    "20e24a6be498e5236270843a8e42e5d649f91ff79ae689e1d19169b42c080a10": {
      "address": "0xb71e92877e08Aa045E5Fd803A8462f417CBCD941",
      "txHash": "0x2f1fafb80964ec99a597bcceda11b24b4cdd6a25cb88712fda2e51a8819bf22c",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "cohortCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1634_storage",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:64"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1634_storage",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:65"
          },
          {
            "label": "tokenContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IERC20)3459",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:67"
          },
          {
            "label": "currentAdmin",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:71"
          },
          {
            "label": "proposalVotingMap",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:88"
          },
          {
            "label": "proposalMap",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(proposal)3533_storage)",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:90"
          },
          {
            "label": "cohortMap",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(cohort)3522_storage)",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:92"
          },
          {
            "label": "changeDefaultAdminMap",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:94"
          },
          {
            "label": "changeCohortAdminMap",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "wrpVote",
            "src": "contracts/wrpVote.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3459": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(cohort)3522_storage)": {
            "label": "mapping(uint256 => struct wrpVote.cohort)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(proposal)3533_storage)": {
            "label": "mapping(uint256 => struct wrpVote.proposal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1634_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(cohort)3522_storage": {
            "label": "struct wrpVote.cohort",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "admin",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(proposal)3533_storage": {
            "label": "struct wrpVote.proposal",
            "members": [
              {
                "label": "objective",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "proposalTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "votingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
